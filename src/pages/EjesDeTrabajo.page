<apex:page controller="EjesDeTrabajoController" tabStyle="Strategic_Client_Plan__tab"  sidebar="false" showHeader="true" rendered="{!mostrar}" docType="html-5.0">
    
        

    <c:SCPMenu ></c:SCPMenu>

    
    <apex:includeScript value="{!$Resource.html2canvas}"/>
    
    <style>
        
        .pbSubheader h3 {
        display: inline;
        margin-left: 5px;
        font-weight: bold;
        }
        
        .icon-sectors-botonera {
        width: 38px;            
        }
        
        .tableHeader{
        text-align: center !important;
        }
        
        .contenidoTabla{
        text-transform: capitalize;
        color:black;
        }
        
        .cabeceraTabla{
        background-color:hsla(203,68%,37%,1);
        color:white;
        }
        
        .bordesDeCuerpo{
        border: 1px solid black !important;
        }
        
        .sinBordes{
        border-bottom-color: hsla(203,68%,37%,1) !important;
        }
        
        .Mala{
        background-color: #FB5E5E !important;
        }
        
        .Regular{
        background-color: #feff00 !important;
        }
        
        .Buena{
        background-color: #09ce0c !important;
        }
        
        .aca{
        min-height: 105px;
        }
        
        .node {
        cursor: pointer;
        }
        
        .node circle {
        fill: #fff;
        stroke: steelblue;
        stroke-width: 3px;
        }
        
        .node text {
        font: 12px sans-serif;
        }
        
        .link {
        fill: none;
        stroke: #ccc;
        stroke-width: 2px;
        }
        
         #circle {
      width: 20px;
      height: 20px;
      -webkit-border-radius: 25px;
      -moz-border-radius: 25px;
      border-radius: 25px;
      background: orange;
        float:left;
    }
        
        
        
       
        
    </style>
    
    
    
    <apex:outputpanel styleClass="container-fluid bootstrap-sf1" id="pageContent">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h2 class="panel-title">
                    <span style="float:left;">
                        {!$Label.certa_scp__ejes_de_trabajo}
                    </span>
                </h2>
                
                <div class="row paddingRight">
                    <div class="btn-group pull-right" role="group" aria-label="...">
                        
                        <apex:outputPanel id="buttonPanel">
                            <div class="btn-group pull-right" role="group" aria-label="...">
                                
                                <button type="button" class="btn btn-default btn-sm" onclick="irAInicio()">
                                    <!--<apex:image style="height:35px;" url="{!URLFOR($Resource.icono4Planning)}" styleClass="icon-sectors-botonera"/>-->
                                    <span class="glyphicon glyphicon-home"></span>&nbsp; 4Planning
                                </button>
                                
                                <button type="button"  class="btn btn-default btn-sm" onclick="irAPlanDeAccion()">
                                    <!--<apex:image url="{!URLFOR($Resource.iconoHitos)}" styleClass="icon-sectors-botonera"/>-->
                                    <span class="glyphicon glyphicon-calendar icon-btn-left"></span>&nbsp;Hitos
                                </button> 
                                
                                
                                <button type="button" class="btn btn-default btn-sm" onclick="irADesarrolloCuenta()">
                                    <!--<apex:image url="{!URLFOR($Resource.Iconos, '256/flow-market-icon.png')}" styleClass="icon-sectors-botonera"/>-->
                                    <span class="glyphicon glyphicon-stats"></span>&nbsp;Coeficiente Cuenta
                                </button> 
                                
                                <button type="button" disabled="true" class="btn btn-default btn-sm" onclick="irAEjesDeTrabajo()">
                                    <!--<apex:image url="{!URLFOR($Resource.iconoRetos)}" styleClass="icon-sectors-botonera"/>-->
                                    <span class="glyphicon glyphicon-list"></span>&nbsp;Retos
                                </button>  
                                
                                <button type="button" class="btn btn-default btn-sm" onclick="irAForYou()">
                                    <!--<apex:image style="height:35px;" url="{!URLFOR($Resource.iconoForYou)}" styleClass="icon-sectors-botonera"/>-->
                                    <span class="glyphicon glyphicon-gift"></span>&nbsp;4You
                                </button>    
                                
                                <br/>
                                
                                <div style="margin-top:2%;" class="btn-group pull-right" role="group" aria-label="...">
                                    
                                    <button type="button" class="btn btn-default btn-sm" onclick="irACuestionario()">
                                    <span class="glyphicon glyphicon-arrow-left icon-btn-left"></span>&nbsp;Cuestionario
                                </button>
                                </div>                                
                                
                                
                            </div>
                        </apex:outputPanel>  
                        
                    </div>
                </div>
            </div>
            
            
            <apex:form >
               <apex:actionFunction action="{!irAForYou}" name="irAForYou"/>
                <apex:actionFunction action="{!irADesarrolloCuenta}" name="irADesarrolloCuenta" status="renderMeStatus"/>
                <apex:actionFunction action="{!irACuestionario}" name="irACuestionario" status="renderMeStatus"/>
                <apex:actionFunction action="{!irAPlanDeAccion}" name="irAPlanDeAccion" status="renderMeStatus"/>
                <apex:actionFunction action="{!irAInicio}" name="irAInicio"/>
            </apex:form>            
            
            
            
            
            <apex:outputPanel rendered="{! !hayDatos}">
                
                <div style = "width: 98%;" class="center-block alert alert-warning" role="alert">
                    <span class="glyphicon glyphicon-warning-sign" aria-hidden="true"></span>
                    {!$Label.No_hay_datos_cargados_en_4Planning_Lite_Complete_el_cuestionario_y_vuelva_a_ing}
                </div>
                
            </apex:outputPanel>
            
            <apex:outputPanel rendered="{!hayDatos}">
                
                <br/>
                <br/>
                <div id="ImagenAGenerar">
                    <div class="alert alert-info" role="alert">	
                        <span class="glyphicon glyphicon-info-sign"></span>	    				
                        <span class="messageText"><span style="font-weight:bold;  margin:5px">{!$Label.Asignaci_n_para_Ejes_de_Trabajo}</span><br/>
                            
                            
                            <table style="text-align:center; margin-left: 20%; width:60%;">
                                <tr>
                                    <th style="width: 15%;text-align: center;">
                                        A - {!$Label.Area}
                                        <p>
                                            {!$Label.EntrePar_Conocimiento}
                                        </p>
                                    </th>
                                    <th style="width: 15%;text-align: center;">
                                        R - {!$Label.Reto}
                                        <p>
                                            {!$Label.EntrePar_Etapa}
                                        </p>
                                    </th>
                                    <th style="width: 15%;text-align: center;">
                                        CO - {!$Label.Contactos}
                                        <p>
                                            {!$Label.EntrePar_Relaci_n}
                                        </p>
                                    </th>
                                    <th style="width: 15%;text-align: center;">
                                        S - {!$Label.Soluciones}
                                        <p>
                                            {!$Label.EntrePar_Estado}
                                        </p>
                                    </th>
                                </tr>
                                <tr class="Mala">
                                    <td>
                                        {!$Label.Bajo}
                                    </td>
                                    <td>
                                        {!$Label.Implementacion}
                                    </td>
                                    <td>
                                        {!$Label.No_lo_conozco}
                                    </td>
                                    <td>
                                        {!$Label.no_disponible}
                                    </td>
                                </tr>
                                <tr class="Mala">
                                    <td>
                                        -
                                    </td>
                                    <td>
                                        {!$Label.Compras}
                                    </td>
                                    
                                    <td>
                                        -
                                    </td>
                                    <td>-
                                    </td>
                                </tr>
                                <tr class="Regular">
                                    <td>
                                        {!$Label.Medio}
                                    </td>
                                    <td>
                                        {!$Label.RFP_RFI}
                                    </td>
                                    <td>
                                        {!$Label.Ocasional_pero_Cordial}
                                    </td>
                                    <td>
                                        {!$Label.en_desarrollo}
                                    </td>
                                </tr>
                                <tr class="Regular">
                                    <td>
                                        -
                                    </td>
                                    <td>
                                        -
                                    </td>
                                    <td>
                                        {!$Label.Intensa_y_Dif_cil}
                                    </td>
                                    <td>
                                        -
                                    </td>
                                </tr>
                                <tr class="Buena">
                                    <td>
                                        {!$Label.Alto}
                                    </td>
                                    <td>
                                        {!$Label.Prospecci_n}
                                    </td>
                                    <td>
                                        {!$Label.Fluida_y_Constante}
                                    </td>
                                    <td>
                                        {!$Label.disponible}
                                    </td>
                                </tr>
                                <tr class="Buena">
                                    <td>
                                        -
                                    </td>
                                    <td>
                                        {!$Label.Dise_o}
                                    </td>
                                    <td>
                                        -
                                    </td>
                                    <td>
                                        -
                                    </td>
                                </tr>
                            </table>
                            
                            
                        </span>
                    </div>
                    
                    <br/><br/>
                    
               
                    <apex:includeScript value="{!$Resource.d3}" />
                    
                    <div id="container"></div>
                    
                    <script>
                    
                    var treeData = [{!js}]
                    
                    
                    // ************** Generate the tree diagram	 *****************
                    var margin = {top: 0, right: 0, bottom: 0, left: 120},
                        width = 1100 - margin.right - margin.left,
                        height = 600 - margin.top - margin.bottom;
                    
                    var i = 0,
                        duration = 750,
                        root;
                    
                    var tree = d3.layout.tree()
                    .size([height, width]);
                    
                    var diagonal = d3.svg.diagonal()
                    .projection(function(d) { return [d.y, d.x]; });
                    
                    var svg = d3.select("#container").append("svg")
                    .attr("width", width + margin.right + margin.left)
                    .attr("height", height + margin.top + margin.bottom)
                    .append("g")
                    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
                    
                    root = treeData[0];
                    root.x0 = height / 2;
                    root.y0 = 0;
                    
                    update(root);
                    
                    d3.select(self.frameElement).style("height", "600px");
                    
                    function update(source) {
                        
                        // Compute the new tree layout.
                        var nodes = tree.nodes(root).reverse(),
                            links = tree.links(nodes);
                        
                        // Normalize for fixed-depth.
                        nodes.forEach(function(d) { d.y = d.depth * 180; });
                        
                        // Update the nodes…
                        var node = svg.selectAll("g.node")
                        .data(nodes, function(d) { return d.id || (d.id = ++i); });
                        
                        // Enter any new nodes at the parent's previous position.
                        var nodeEnter = node.enter().append("g")
                        .attr("class", "node")
                        .attr("transform", function(d) { return "translate(" + source.y0 + "," + source.x0 + ")"; })
                        .on("click", click);
                        
                        nodeEnter.append("circle")
                        .attr("r", function(d) { return d.value; })
                        .style("stroke", function(d) { return d.type; })
                        .style("fill", function(d) { return d.level; });
                        
                        nodeEnter.append("text")
                        .attr("x", function(d) {return d.children || d._children ? -13 : 13;})
                        .attr("y", function(d) {if(d.children!=null){return -10}})
                        .attr("dy", ".35em")
                        .attr("text-anchor", function(d) {return d.children || d._children ? "end" : "start";})
                        
                        .text(function(d) {if (d.children!= null && d.name != null && d.name.length > 22){
                            return d.name.substring(0,21) + '...'}
                                           else{
                                               return d.name;}})
                        
                        //.text(function(d) { return d.name; })
                        .style("fill-opacity", 1e-6);
                        
                        
                        
                        
                        
                        
                        // Transition nodes to their new position.
                        var nodeUpdate = node.transition()
                        .duration(duration)
                        .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; });
                        
                        nodeUpdate.select("circle")
                        .attr("r", 10)
                        .style("fill", function(d) { return d.prueba; });
                        
                        nodeUpdate.select("text")
                        .style("fill-opacity", 1);
                        
                        // Transition exiting nodes to the parent's new position.
                        var nodeExit = node.exit().transition()
                        .duration(duration)
                        .attr("transform", function(d) { return "translate(" + source.y + "," + source.x + ")"; })
                        .remove();
                        
                        nodeExit.select("circle")
                        .attr("r", 1e-6);
                        
                        nodeExit.select("text")
                        .style("fill-opacity", 1e-6);
                        
                        // Update the links…
                        var link = svg.selectAll("path.link")
                        .data(links, function(d) { return d.target.id; });
                        
                        // Enter any new links at the parent's previous position.
                        link.enter().insert("path", "g")
                        .attr("class", "link")
                        .style("stroke", function(d) { return d.target.level; })
                        .attr("d", function(d) {
                            var o = {x: source.x0, y: source.y0};
                            return diagonal({source: o, target: o});
                        });
                        
                        // Transition links to their new position.
                        link.transition()
                        .duration(duration)
                        .attr("d", diagonal);
                        
                        // Transition exiting nodes to the parent's new position.
                        link.exit().transition()
                        .duration(duration)
                        .attr("d", function(d) {
                            var o = {x: source.x, y: source.y};
                            return diagonal({source: o, target: o});
                        })
                        .remove();
                        
                        // Stash the old positions for transition.
                        nodes.forEach(function(d) {
                            d.x0 = d.x;
                            d.y0 = d.y;
                        });
                    }
                    
                    // Toggle children on click.
                    function click(d) {
                        if (d.children) {
                            d._children = d.children;
                            d.children = null;
                        } else {
                            d.children = d._children;
                            d._children = null;
                        }
                        update(d);
                    }
                    
                    </script>
                </div>
            
            </apex:outputPanel>
            
            <div class="btn-group pull-right">
                <span><div id="circle"/>&nbsp; Reto con Oportunidad vinculada</span>

            </div>
            
           
            
            <br/><br/>
            <div class="row paddingRight">
                <div class="btn-group pull-right" role="group" aria-label="...">
                    
                    <apex:outputPanel id="buttonPanelButton">
                        <div class="btn-group pull-right" role="group" aria-label="...">
                            
                            <button type="button" class="btn btn-default btn-sm" onclick="irAInicio()">
                                    <!--<apex:image style="height:35px;" url="{!URLFOR($Resource.icono4Planning)}" styleClass="icon-sectors-botonera"/>-->
                                    <span class="glyphicon glyphicon-home"></span>&nbsp; 4Planning
                                </button>
                                
                                <button type="button"  class="btn btn-default btn-sm" onclick="irAPlanDeAccion()">
                                    <!--<apex:image url="{!URLFOR($Resource.iconoHitos)}" styleClass="icon-sectors-botonera"/>-->
                                    <span class="glyphicon glyphicon-calendar icon-btn-left"></span>&nbsp;Hitos
                                </button> 
                                
                                
                                <button type="button" class="btn btn-default btn-sm" onclick="irADesarrolloCuenta()">
                                    <!--<apex:image url="{!URLFOR($Resource.Iconos, '256/flow-market-icon.png')}" styleClass="icon-sectors-botonera"/>-->
                                    <span class="glyphicon glyphicon-stats"></span>&nbsp;Coeficiente Cuenta
                                </button> 
                                
                                <button type="button" disabled="true" class="btn btn-default btn-sm" onclick="irAEjesDeTrabajo()">
                                    <!--<apex:image url="{!URLFOR($Resource.iconoRetos)}" styleClass="icon-sectors-botonera"/>-->
                                    <span class="glyphicon glyphicon-list"></span>&nbsp;Retos
                                </button>  
                                
                                <button type="button" class="btn btn-default btn-sm" onclick="irAForYou()">
                                    <!--<apex:image style="height:35px;" url="{!URLFOR($Resource.iconoForYou)}" styleClass="icon-sectors-botonera"/>-->
                                    <span class="glyphicon glyphicon-gift"></span>&nbsp;4You
                                </button>  
                                
                                <br/>
                                
                                <div style="margin-top:2%;" class="btn-group pull-right" role="group" aria-label="...">
                                
                                <button type="button" class="btn btn-default btn-sm" onclick="irACuestionario()">
                                    <span class="glyphicon glyphicon-arrow-left icon-btn-left"></span>&nbsp;Cuestionario
                                </button>
                                </div>                             
                            
                            
                        </div>
                    </apex:outputPanel>  
                    
                </div>
            </div>
            
                       
            
            <c:FastTask page="{!$Label.certa_scp__trend}" account="{!idCuenta}"></c:FastTask>
            <chatter:feed entityId="{!idCuenta}" />
        </div>
    </apex:outputpanel>
        
</apex:page>